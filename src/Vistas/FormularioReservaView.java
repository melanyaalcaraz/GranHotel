/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controlador.Conexion;
import Controlador.HabitacionData;
import Controlador.HuespedData;
import Controlador.ReservaData;
import Modelo.Categoria;
import Modelo.Habitacion;
import Modelo.Huesped;
import Modelo.Reserva;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anto
 */
public class FormularioReservaView extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioReservaView
     */
    private HuespedData HuesData;
    private ReservaData resData;
    private HabitacionData habData;
    
    private ArrayList<Huesped> listaH;
    private ArrayList<Habitacion> listaHab;
    private Conexion conexion;
    private DefaultTableModel modelo;
        
    public FormularioReservaView() {
        initComponents();
        conexion = new Conexion();
        HuesData = new HuespedData(conexion);
        listaH = (ArrayList<Huesped>)HuesData.listarHuespedes();
        modelo = (DefaultTableModel) jTable1.getModel();
        cargaHuesped();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        boxHuesped = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        radioHabReservadas = new javax.swing.JRadioButton();
        radioHabLibres = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fechaFin = new com.toedter.calendar.JDateChooser();
        fechaInicio = new com.toedter.calendar.JDateChooser();
        buttonReservar = new javax.swing.JButton();
        buttonAnular = new javax.swing.JButton();
        buttonSalir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtCantPersonas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtPrecio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        radioEstado = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Seleccione un huesped:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Reservas:");

        radioHabReservadas.setText("Habitaciones reservadas");
        radioHabReservadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHabReservadasActionPerformed(evt);
            }
        });

        radioHabLibres.setText("Habitaciones libres");
        radioHabLibres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHabLibresActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Habitacion", "Numero Habitacion", "Id Categoria", "Refaccion", "Piso"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Fecha Inicio:");

        jLabel5.setText("Fecha Fin:");

        buttonReservar.setText("Reservar");
        buttonReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReservarActionPerformed(evt);
            }
        });

        buttonAnular.setText("Anular");
        buttonAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnularActionPerformed(evt);
            }
        });

        buttonSalir.setText("Salir");
        buttonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalirActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad de personas:");

        jtCantPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCantPersonasActionPerformed(evt);
            }
        });

        jLabel7.setText("Precio:");

        jtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPrecioActionPerformed(evt);
            }
        });

        jLabel8.setText("Estado:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Listado de Habitaciones:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(boxHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jLabel9))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtCantPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(18, 18, 18)
                                            .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(106, 106, 106))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addComponent(buttonReservar)
                                            .addGap(67, 67, 67)
                                            .addComponent(buttonAnular)
                                            .addGap(82, 82, 82)
                                            .addComponent(buttonSalir))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(36, 36, 36)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel8))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radioEstado)
                                                .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(38, 38, 38)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(radioHabReservadas)
                                    .addGap(18, 18, 18)
                                    .addComponent(radioHabLibres))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(164, 164, 164)
                                    .addComponent(jLabel3))))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioEstado)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jtCantPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioHabReservadas)
                    .addComponent(radioHabLibres))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonReservar)
                    .addComponent(buttonAnular)
                    .addComponent(buttonSalir))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_buttonSalirActionPerformed

    private void buttonReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReservarActionPerformed
        // TODO add your handling code here:
         if (vacio()) {
        resData= new ReservaData(conexion);
        int filaSeleccionada = jTable1.getSelectedRow();
        if(filaSeleccionada!= -1){
            Huesped hues = (Huesped)boxHuesped.getSelectedItem();
             habData= new HabitacionData(conexion);
             Habitacion hab= habData.buscarHabitacion((int)jTable1.getValueAt((int)jTable1.getSelectedRow(),0) );
            
            //JCalendar --> Date--> LocalDate
            Date fecha1 = fechaInicio.getDate();
            LocalDate fechaI = fecha1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Date fecha2 = fechaFin.getDate();
            LocalDate fechaF = fecha2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            //String--> Double
            String pre=jtPrecio.getText();
            Double precio = Double.parseDouble(pre);
            //String-->Int
            String cant= jtCantPersonas.getText();
            int cantPersonas= Integer.parseInt(cant);
            boolean estado;
            if(radioEstado.isSelected()){
                estado=true;
            }else{
                estado=false;
            }
            
            Reserva re = new Reserva(hab,hues,fechaI, fechaF,precio,cantPersonas,estado);
            
            resData.reservar(re);
            borrarFilaTabla();
        }else {
            JOptionPane.showMessageDialog(this, "Hay campos para revisar, no deben quedar vacios");
        }}
         
    }//GEN-LAST:event_buttonReservarActionPerformed

    private void buttonAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnularActionPerformed
        // TODO add your handling code here:
        resData= new ReservaData(conexion);
        habData= new HabitacionData(conexion);
        int filaSeleccionada = jTable1.getSelectedRow();
       
           if(filaSeleccionada!= -1){
            //modelo.setRowCount(0);
            Huesped hues = (Huesped)boxHuesped.getSelectedItem();
            int idHuesped=hues.getIdhuesped();
            Habitacion hab= habData.buscarHabitacion((int)jTable1.getValueAt((int)jTable1.getSelectedRow(),0) );
            int idHabitacion= hab.getIdHabitacion();
            resData.anularReserva(idHuesped, idHabitacion);
           // borrarFilaTabla();
            cargaHabReservadas();
       } 
           
       
    }//GEN-LAST:event_buttonAnularActionPerformed

    private void radioHabReservadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHabReservadasActionPerformed
        // TODO add your handling code here:
        //borrarFilaTabla();
        radioHabLibres.setSelected(false);
        cargaHabReservadas();
        buttonAnular.setEnabled(true);
        buttonReservar.setEnabled(false);
    }//GEN-LAST:event_radioHabReservadasActionPerformed

    private void radioHabLibresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHabLibresActionPerformed
        // TODO add your handling code here:
        borrarFilaTabla();
        radioHabReservadas.setSelected(false);
        cargaHabLibres();
        buttonAnular.setEnabled(false);
        buttonReservar.setEnabled(true);
    }//GEN-LAST:event_radioHabLibresActionPerformed

    private void jtCantPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCantPersonasActionPerformed
        // TODO add your handling code here:
         try {
            int cant = Integer.parseInt(jtCantPersonas.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El dato no es numerico, vuelve a ingresarlo ");
            jtCantPersonas.requestFocus();
            limpiar();
        }
    }//GEN-LAST:event_jtCantPersonasActionPerformed

    private void jtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPrecioActionPerformed
        // TODO add your handling code here:
         try {
            int precio = Integer.parseInt(jtPrecio.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El dato no es numerico, vuelve a ingresarlo ");
            jtPrecio.requestFocus();
            limpiar();
        }
    }//GEN-LAST:event_jtPrecioActionPerformed

     public void limpiar() {
        jtCantPersonas.setText("");
        jtPrecio.setText("");
        radioEstado.setSelected(false);
    }
    private void cargaHuesped(){ // Carga al combo box
        for(Huesped item: listaH){
            boxHuesped.addItem(item);
        }
    }
    private void borrarFilaTabla(){
        int indice = modelo.getRowCount() -1;
        
        for (int i = indice;i>=0;i--){
            modelo.removeRow(i);
        }
    }
     private void cargaHabReservadas(){
        //borrarFilasTabla();
        
        Date fecha1 = fechaInicio.getDate();
        LocalDate fechaI = fecha1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        Date fecha2 = fechaFin.getDate();
        LocalDate fechaF = fecha2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
         resData= new ReservaData(conexion);
       
         listaHab = (ArrayList) resData.obtenerHabitacionesOcupadas(fechaI,fechaF);
        
        
        modelo.setRowCount(0);
         
         listaHab.forEach((h) -> {
             modelo.addRow(new Object[] { h.getIdHabitacion(), h.getNroHabitacion(), h.obtengoIdCategoria(), h.isRefaccion(), h.getPiso()});
        });
         
    }
    
    private void cargaHabLibres(){
        //borrarFilasTabla();
        Date fecha1 = fechaInicio.getDate();
        LocalDate fechaI = fecha1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Date fecha2 = fechaFin.getDate();
        LocalDate fechaF = fecha2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        resData= new ReservaData(conexion);
        List <Habitacion> lista =  resData.obtenerHabitacionesLibres(fechaI, fechaF);
        modelo.setRowCount(0);
        for(Habitacion h : lista){
            modelo.addRow(new Object[] { h.getIdHabitacion(), h.getNroHabitacion(), h.obtengoIdCategoria(), h.isRefaccion(), h.getPiso()});
        }
    }
     private boolean vacio() {
        String str = "";
        if (!str.equals(jtPrecio.getText()) && !str.equals(jtCantPersonas.getText())) {
            return true;
        } else {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Huesped> boxHuesped;
    private javax.swing.JButton buttonAnular;
    private javax.swing.JButton buttonReservar;
    private javax.swing.JButton buttonSalir;
    private com.toedter.calendar.JDateChooser fechaFin;
    private com.toedter.calendar.JDateChooser fechaInicio;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtCantPersonas;
    private javax.swing.JTextField jtPrecio;
    private javax.swing.JRadioButton radioEstado;
    private javax.swing.JRadioButton radioHabLibres;
    private javax.swing.JRadioButton radioHabReservadas;
    // End of variables declaration//GEN-END:variables
}
